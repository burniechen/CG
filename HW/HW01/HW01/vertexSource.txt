#version 330 core
layout (location = 6) in vec3 aPos;
// layout (location = 7) in vec3 aColor;
layout (location = 8) in vec2 aTexCoord;
layout (location = 9) in vec3 aNormal;

// uniform mat4 transform;
uniform mat4 modelMat;
uniform mat4 viewMat;
uniform mat4 projMat;

// out vec4 vertexColor;
out vec2 TexCoord;
out vec3 FragPos;
out vec3 Normal;

void main()
{
   gl_Position = projMat * viewMat * modelMat * vec4(aPos, 1.0f); // 3維到4維
   // vertexColor = vec4(aColor.x, aColor.y, aColor.z, 1.0);
   
   TexCoord = aTexCoord;
   FragPos = vec3(modelMat * vec4(aPos, 1.0f));
   Normal = mat3(transpose(inverse(modelMat))) * aNormal;
}
